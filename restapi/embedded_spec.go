// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Excange core functionality",
    "title": "Exchange",
    "termsOfService": "N/A",
    "contact": {
      "email": "email@email.com"
    },
    "license": {
      "name": "Mit",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8181",
  "basePath": "/v1",
  "paths": {
    "/asset/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "asset"
        ],
        "summary": "List all assets",
        "operationId": "assetList",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Assets"
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        }
      }
    },
    "/order": {
      "post": {
        "security": [
          {
            "accessToken": []
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "order"
        ],
        "summary": "Process trader order",
        "operationId": "processOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Trander Identifier",
            "name": "X-TOKEN",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Order type buy/sell",
            "name": "type",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Asset name",
            "name": "asset",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "Asset quantity",
            "name": "quantity",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "susscefull operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid order",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/trader/portfolio": {
      "get": {
        "security": [
          {
            "accessToken": []
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "trader"
        ],
        "summary": "Get trader current portfolio",
        "operationId": "traderPortfolio",
        "parameters": [
          {
            "type": "string",
            "description": "Trader Identifier",
            "name": "token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Portfolio"
            }
          }
        }
      }
    },
    "/trader/portfolios": {
      "get": {
        "security": [
          {
            "accessToken": []
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "trader"
        ],
        "summary": "Get all traders portfolios",
        "operationId": "traderPortfolios",
        "parameters": [
          {
            "type": "string",
            "description": "Trader Identifier",
            "name": "token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Portfolios"
              }
            }
          }
        }
      }
    },
    "/trader/register": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "trader"
        ],
        "summary": "Creates new trader",
        "operationId": "createNewtrader",
        "responses": {
          "200": {
            "description": "susscefull operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Asset": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "unitValue": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "Assets": {
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/Asset"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "Portfolio": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Assets"
      }
    },
    "Portfolios": {
      "type": "object",
      "properties": {
        "portfolio": {
          "$ref": "#/definitions/Portfolio"
        },
        "token": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "description": "Worker identifier",
      "type": "apiKey",
      "name": "X-TOKEN",
      "in": "header"
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Excange core functionality",
    "title": "Exchange",
    "termsOfService": "N/A",
    "contact": {
      "email": "email@email.com"
    },
    "license": {
      "name": "Mit",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8181",
  "basePath": "/v1",
  "paths": {
    "/asset/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "asset"
        ],
        "summary": "List all assets",
        "operationId": "assetList",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Assets"
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        }
      }
    },
    "/order": {
      "post": {
        "security": [
          {
            "accessToken": []
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "order"
        ],
        "summary": "Process trader order",
        "operationId": "processOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Trander Identifier",
            "name": "X-TOKEN",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Order type buy/sell",
            "name": "type",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Asset name",
            "name": "asset",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "Asset quantity",
            "name": "quantity",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "susscefull operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid order",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/trader/portfolio": {
      "get": {
        "security": [
          {
            "accessToken": []
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "trader"
        ],
        "summary": "Get trader current portfolio",
        "operationId": "traderPortfolio",
        "parameters": [
          {
            "type": "string",
            "description": "Trader Identifier",
            "name": "token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Portfolio"
            }
          }
        }
      }
    },
    "/trader/portfolios": {
      "get": {
        "security": [
          {
            "accessToken": []
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "trader"
        ],
        "summary": "Get all traders portfolios",
        "operationId": "traderPortfolios",
        "parameters": [
          {
            "type": "string",
            "description": "Trader Identifier",
            "name": "token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Portfolios"
              }
            }
          }
        }
      }
    },
    "/trader/register": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "trader"
        ],
        "summary": "Creates new trader",
        "operationId": "createNewtrader",
        "responses": {
          "200": {
            "description": "susscefull operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Asset": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "unitValue": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "Assets": {
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/Asset"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "Portfolio": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Assets"
      }
    },
    "Portfolios": {
      "type": "object",
      "properties": {
        "portfolio": {
          "$ref": "#/definitions/Portfolio"
        },
        "token": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "description": "Worker identifier",
      "type": "apiKey",
      "name": "X-TOKEN",
      "in": "header"
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
}
